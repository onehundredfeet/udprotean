image: haxe:4.2-bullseye


stages:
- build-test
- deploy


build-cs:
  stage: build-test
  variables:
    HXML: hxml/build-cs.hxml
  script:
  # Install Mono
  - apt-get update
  - apt-get install -yqq --no-install-recommends apt-transport-https ca-certificates mono-complete

  - haxelib install $HXML --always --quiet
  - haxe $HXML


test-neko:
  stage: build-test
  retry: 2
  variables:
    HXML: test-neko.hxml
  coverage: '/COVERAGE RESULT\s+([0-9.]+)%/'
  script:
  - haxelib install $HXML --always --quiet
  - haxe $HXML


test-cpp:
  stage: build-test
  retry: 2
  cache:
    key: cpp-build
    paths:
    - build/cpp/obj
  variables:
    HXML: test-cpp.hxml
  coverage: '/COVERAGE RESULT\s+([0-9.]+)%/'
  script:
  # Install C++ build tools
  - apt-get update
  - apt-get install -yqq build-essential g++

  - haxelib install $HXML --always --quiet
  - haxe $HXML


test-lua:
  stage: build-test
  retry: 2
  variables:
    HXML: test-lua.hxml
  script:
  # Install Lua
  - apt-get update
  - apt-get install -yqq lua5.3 liblua5.3-dev luarocks libpcre3-dev cmake
  - ln -s /usr/bin/lua5.3 /usr/bin/lua
  - luarocks install lrexlib-pcre
  - luarocks install environ
  - luarocks install luasocket
  - luarocks install luv
  - luarocks install bit32 || true
  - luarocks install luautf8
  - luarocks install luasocket

  - haxelib install $HXML --always --quiet
  - haxe $HXML


deploy:
  stage: deploy
  only:
  - /^v\d+.\d+.\d+$/
  before_script:
  - apt-get update
  - apt-get install -yqq zip jq
  script:
  # Patch version number in haxelib.json
  - export TMP=$(mktemp)
  - export VERSION=$(echo $CI_COMMIT_TAG | cut -d 'v' -f 2)
  - echo $VERSION
  - jq ".version = \"$VERSION\"" haxelib.json > "$TMP"
  - mv "$TMP" haxelib.json
  # Make zip
  - mkdir -p build
  - zip -r build/udprotean.zip -@ < haxelib.lst
  # Publish
  - haxelib submit build/udprotean.zip "$HAXELIB_PASSWORD"
